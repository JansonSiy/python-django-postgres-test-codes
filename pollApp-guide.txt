Creating your pollApp (after project setup)

STEP 1: create the app (in the same directory as your manage.py file)

CREATE YOUR FIRST VIEW
STEP 1: update your appName/views.py
STEP 2: create a urls.py file in your app directory
STEP 3: update your urls.py
STEP 4: go to projectFolderName/urls.py then update

CREATING & ACTIVATING MODELS
STEP 1: create your model in appName/models.py
*activating models
STEP 2: open appName/settings.py
*to create migrations for those changes
STEP 3: python manage.py makemigrations polls
*to apply those changes to the database
STEP 4: python manage.py migrate

INTERACTIVE PYTHON SHELL
*open interactive shell
code: python manage.py shell

*import the model classes we just wrote
code: from appName.models import Model1, Model2

*make the object to string so it's readable (add this in appName/models.py)
code: __str__()

SAMPLE CODES IN SHELL
*to display data from the model
Question.objects.all()

*create model
q1 = Question(question_text="How's your day?", pub_date=timezone.now())

q1.save()

*to check & create submodel
q0 = Question.objects.get(pk=1)
q0.choice_set.all()
q0.choice_set.create(choice_text='Who knows?', votes=0)

DJANGO ADMIN
*creating an admin user
STEP 1: python manage.py createsuperuser
STEP 2: enter username, email and password
STEP 3: visit the server with /admin
STEP4: Make the poll app modifiable in the appName/admin.py

WRITE YOUR FIRST APP
STEP 1: write/add more views in appName/views.py
STEP 2: add this views in appName/urls.py
STEP 3: create a template for your views
*create (for index) polls/templates/polls/index/html

WRITE TEST
STEP 1: write test in appName/tets.py
STEP 2: run the test in the terminal (python manage.py test appName)

FRONTEND
STEP 1: create polls/static/polls/style.css

CUSTOMIZING ADMIN
projectFolderName/appName/admin.py